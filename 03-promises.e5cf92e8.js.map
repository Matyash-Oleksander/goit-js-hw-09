{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,QAAQC,IAAI,yCAEZ,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,uBAClCE,MAAOH,SAASC,cAAc,uBAC9BG,KAAMJ,SAASC,cAAc,sBAC7BI,OAAQL,SAASC,cAAc,yBA8BjC,SAASK,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUJ,IAEpBO,EAAO,C,SAAEH,E,MAAUJ,MAEpBA,MArCPL,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAMd,MAAAe,EAAKd,KAAEA,EAAIC,OAAEA,GAqCZ,CACLF,MAAOgB,OAAOrB,EAAKK,MAAMiB,OACzBhB,KAAMe,OAAOrB,EAAKM,KAAKgB,OACvBf,OAAQc,OAAOrB,EAAKO,OAAOe,QAvC7B,IAAK,IAAIC,EAAW,EAAGA,GAAYhB,EAAQgB,GAAY,EACrDf,EAAce,EAAUH,GACrBI,MAAK,EAACf,SAAEA,EAAQJ,MAAEA,MACjBP,QAAQC,IAAIM,GACZP,QAAQC,IAAIU,GACZgB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBlB,QAAiBJ,UAGzCuB,OAAM,EAACnB,SAAEA,EAAQJ,MAAEA,MAClBoB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBpB,QAAeJ,UAIzCe,GAASd,EACTR,QAAQC,IAAIqB,GACZtB,QAAQC,IAAIO","sources":["src/js/03-promises2.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconsole.log('START!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!');\n\nconst refs = {\n  form: document.querySelector('.form'),\n  BtnSubmit: document.querySelector('button[type=sumbit]'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  let { delay, step, amount } = onGetData();\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(delay);\n        console.log(position);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += step;\n    console.log(delay);\n    console.log(step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onGetData() {\n  return {\n    delay: Number(refs.delay.value),\n    step: Number(refs.step.value),\n    amount: Number(refs.amount.value),\n  };\n}\n"],"names":["$eWCmQ","parcelRequire","console","log","$2afcb53b2369184a$var$refs","form","document","querySelector","BtnSubmit","delay","step","amount","$2afcb53b2369184a$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.e5cf92e8.js.map"}