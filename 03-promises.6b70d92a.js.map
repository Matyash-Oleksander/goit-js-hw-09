{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,QAAQC,IAAI,yCAEZ,IAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,uBAClCE,MAAOH,SAASC,cAAc,uBAC9BG,KAAMJ,SAASC,cAAc,sBAC7BI,OAAQL,SAASC,cAAc,yBA8BjC,SAASK,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUJ,UAEpBO,EAAO,CAAEH,WAAUJ,YAEpBA,MArCPL,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAGJ,IADA,IAA8BC,EAqCvB,CACLf,MAAOgB,OAAOrB,EAAKK,MAAMiB,OACzBhB,KAAMe,OAAOrB,EAAKM,KAAKgB,OACvBf,OAAQc,OAAOrB,EAAKO,OAAOe,QAxCvBC,EAAwBH,EAAxBf,MAAOC,EAAiBc,EAAjBd,KAAMC,EAAWa,EAAXb,OACViB,EAAW,EAAGA,GAAYjB,EAAQiB,GAAY,EACrDhB,EAAcgB,EAAUD,GACrBE,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MACjBP,QAAQC,IAAIM,GACZP,QAAQC,IAAIU,GACZkB,EAAA/B,GAASgC,OAAOC,QACd,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,UAGjD0B,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUJ,EAAKqB,EAALrB,MAClBsB,EAAA/B,GAASgC,OAAOI,QACd,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANzB,EAAM,UAIjDkB,GAASjB,EACTR,QAAQC,IAAIwB,GACZzB,QAAQC,IAAIO,M","sources":["src/js/03-promises2.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconsole.log('START!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!');\n\nconst refs = {\n  form: document.querySelector('.form'),\n  BtnSubmit: document.querySelector('button[type=sumbit]'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  let { delay, step, amount } = onGetData();\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(delay);\n        console.log(position);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += step;\n    console.log(delay);\n    console.log(step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onGetData() {\n  return {\n    delay: Number(refs.delay.value),\n    step: Number(refs.step.value),\n    amount: Number(refs.amount.value),\n  };\n}\n"],"names":["$iU1Pc","parcelRequire","console","log","$b4469c6f714b20b9$var$refs","form","document","querySelector","BtnSubmit","delay","step","amount","$b4469c6f714b20b9$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","ref","Number","value","delay1","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.6b70d92a.js.map"}